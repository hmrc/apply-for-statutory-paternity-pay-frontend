@import java.time.LocalDate
@import java.time.format.DateTimeFormatter
@import config.Formats
@import views.xml.pdf.sections._
@import views.xml.pdf.sections.declaration._
@import views.xml.pdf.sections.childDetails._
@import views.xml.pdf.sections.paternity._

@this(
    layout: Layout,
    header: views.xml.pdf.sections.Header,
    personalDetails: views.xml.pdf.sections.PersonalDetails,
    birthDeclaration: BirthDeclaration,
    adoptionDeclaration: AdoptionDeclaration,
    parentalOrderDeclaration: ParentalOrderDeclaration,
    birthChild: BirthChild,
    adoptedChild: AdoptedChild,
    adoptedFromAbroadChild: AdoptedFromAbroadChild,
    paternityDetailsGbPreApril24OrNi: PaternityDetailsGbPreApril24OrNi,
    paternityDetailsGbPostApril24OneWeek: PaternityDetailsGbPostApril24OneWeek,
    paternityDetailsGbPostApril24TwoWeeksTogether: PaternityDetailsGbPostApril24TwoWeeksTogether,
    paternityDetailsGbPostApril24TwoWeeksSeparate: PaternityDetailsGbPostApril24TwoWeeksSeparate,
    paternityDetailsGbPostApril24Unsure: PaternityDetailsGbPostApril24Unsure,
    instructionPage: InstructionPage,
    bookmarkTree: BookmarkTree
)

@(model: JourneyModel)(implicit request: RequestHeader, messages: Messages)

@dateTimeFormat(date: LocalDate) = {
    @Formats.dateTimeFormat()(messages.lang).format(date)
}

<fo:root xml:lang="@messages.lang.locale.getLanguage" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" font-family="sans-serif">

    @layout()

    <fo:declarations>
        <pdf:catalog xmlns:pdf="http://xmlgraphics.apache.org/fop/extensions/pdf">
            <pdf:dictionary type="normal" key="ViewerPreferences">
                <pdf:boolean key="DisplayDocTitle">true</pdf:boolean>
            </pdf:dictionary>
        </pdf:catalog>
    </fo:declarations>

    @bookmarkTree(model)

    <fo:page-sequence master-reference="main">

        @header(model)

        <!-- Body -->
        <fo:flow flow-name="xsl-region-body">
            <fo:block-container>

                @personalDetails(model)

                @{model.childDetails match {
                    case child: JourneyModel.BirthParentalOrderChild =>
                        birthChild(child)

                    case child: JourneyModel.AdoptedUkChild =>
                        adoptedChild(child)

                    case child: JourneyModel.AdoptedAbroadChild =>
                        adoptedFromAbroadChild(child)
                }}

                @{model.paternityLeaveDetails match {
                    case details: JourneyModel.PaternityLeaveGbPreApril24OrNi =>
                        paternityDetailsGbPreApril24OrNi(details)

                    case details: JourneyModel.PaternityLeaveGbPostApril24OneWeek =>
                        paternityDetailsGbPostApril24OneWeek(details)

                    case details: JourneyModel.PaternityLeaveGbPostApril24TwoWeeksTogether =>
                        paternityDetailsGbPostApril24TwoWeeksTogether(details)

                    case details: JourneyModel.PaternityLeaveGbPostApril24TwoWeeksSeparate =>
                        paternityDetailsGbPostApril24TwoWeeksSeparate(details)

                    case JourneyModel.PaternityLeaveGbPostApril24Unsure =>
                        paternityDetailsGbPostApril24Unsure()
                }}

            </fo:block-container>

            @{model.eligibility match {
                case _: JourneyModel.BirthChildEligibility =>
                    birthDeclaration()

                case _ =>
                    model.childDetails match {
                        case _: JourneyModel.BirthParentalOrderChild =>
                            parentalOrderDeclaration()

                        case _ =>
                            adoptionDeclaration()
                    }
            }}
        </fo:flow>

    </fo:page-sequence>

    @instructionPage(model)

</fo:root>